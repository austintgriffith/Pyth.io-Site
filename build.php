#!/usr/bin/php
<?php
/*
script used to replace parts of huge markdown with code and files automatically

DO NOT EDIT FILES IN content DIRECTORY!!!
LET HUGO GENERATE THEM THERE AND THEN RUN BUILD
ONLY EDIT FILES IN sourceContent DIRECTORY!!

*/
$DEBUG = false;

$contentFolder = "content";
$sourceFolder = "sourceContent";

$sections = ["abstract","exploration","fleet","concurrence","further","contact"];

foreach($sections as $section){
  echo "\n ))) Section: $section\n";
  /*
  files will be generated by hugo automatically in the content folder
  then, a build will copy the initial version back to the source folder
  then, a build will fill in content as needed and copy it back to the content Folder
  so you use hugo to generate files, run a build to get them in source, then edit them in
  the source dirctory and run build again to get them built back to content
  */

  @mkdir($contentFolder."/".$section);
  $di = new RecursiveDirectoryIterator($contentFolder."/".$section);
  $finalFiles = array();
  foreach (new RecursiveIteratorIterator($di) as $filename => $file) {
    if($file->getFilename()!="."&&$file->getFilename()!=".."){
        array_push($finalFiles,$filename);
    }
  }
  if($DEBUG) print_r($finalFiles);


  @mkdir($sourceFolder);
  @mkdir($sourceFolder."/".$section);
  $di = new RecursiveDirectoryIterator($sourceFolder."/".$section);
  $sourceFiles = array();
  foreach (new RecursiveIteratorIterator($di) as $filename => $file) {
    if($file->getFilename()!="."&&$file->getFilename()!=".."){
        array_push($sourceFiles,$filename);
    }
  }
  if($DEBUG) print_r($sourceFiles);


  foreach($finalFiles as $finalFile){
    $sourceFileShouldBe = str_replace($contentFolder."/".$section,$sourceFolder."/".$section,$finalFile);
    if(!in_array($sourceFileShouldBe,$sourceFiles)){
      echo "  #####   Copying content file $finalFile back to $sourceFileShouldBe...\n";
      echo copy($finalFile,$sourceFileShouldBe);
    }
  }


  //now we know we have all the source files ready, now lets build the source files
  //and copy them back to the content directory

  $di = new RecursiveDirectoryIterator($sourceFolder."/".$section);
  $sourceFiles = array();
  foreach (new RecursiveIteratorIterator($di) as $filename => $file) {
    if($file->getFilename()!="."&&$file->getFilename()!=".."){
        echo "== building $filename ==\n";
        $contents = file_get_contents($filename);
        $outputContent = "";
        $lines = explode("\n",$contents);
        foreach($lines as $line){
          if(strpos($line,"<!--RQC")!==FALSE){
            $parts = explode(" ",$line);
            if($parts[1]=="CODE"){
              $codeType = $parts[2];
              if($codeType=="solidity") $codeType="";
              $outputContent.=
"```".$codeType."
".file_get_contents("../".$parts[3])."
```";
            }else if($parts[1]=="ADDRESS"||$parts[1]=="ABI"){
              $outputContent.=
"```
".file_get_contents("../".$parts[2])."
```";
            }
          }else{
            $outputContent.=$line."\n";
          }
        }
        $outputPath = str_replace($sourceFolder."/".$section,$contentFolder."/".$section,$filename);
        echo " = writing file: $outputPath = \n";
        file_put_contents($outputPath, $outputContent);

    }
  }
}


/* Finally, run the hugo stuff to build out the public directory */
passthru("hugo");
